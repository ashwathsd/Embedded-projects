#include <stdio.h>
#include <string.h>
#define ROWS 5
#define COLS 4
typedef enum {
    AC,
    NON_AC,
    SLEEPER
} BusType;
typedef struct {
    char name[50];
    int age;
    int isBooked;
} Passenger;
void displaySeats(Passenger (*seats)[COLS]);
void bookSeat(Passenger (*seats)[COLS]);
void cancelSeat(Passenger (*seats)[COLS]);
int main() {
    Passenger seats[ROWS][COLS] = {0};
    int choice;
    BusType bus = AC;
    printf("Bus Type: ");
    switch (bus) {
        case AC: printf("AC\n"); break;
        case NON_AC: printf("NON-AC\n"); break;
        case SLEEPER: printf("SLEEPER\n"); break;
    }
    do {
        printf("Enter your choice: ");
        scanf("%d", &choice);
        getchar();
        switch (choice) {
            case 1:
                displaySeats(seats);
                break;
            case 2:
                bookSeat(seats);
                break;
            case 3:
                cancelSeat(seats);
                break;
            default:
                printf("Invalid choice.\n");
        }
    } while (choice != 4);
    return 0;
}
void displaySeats(Passenger (*seats)[COLS]) {
    printf("\nSeat Layout (0 = Available, X = Booked):\n");
    for (int i = 0; i < ROWS; i++) {
        for (int j = 0; j < COLS; j++) {
            Passenger *p = *(seats + i) + j;
            if (p->isBooked)
                printf(" X ");
            else
                printf(" 0 ");
        }
        printf("\n");
    }
}
void bookSeat(Passenger (*seats)[COLS]) {
    int row, col;
    printf("Enter seat to book (row[0-%d] and col[0-%d]): ", ROWS-1, COLS-1);
    scanf("%d %d", &row, &col);
    getchar();
    if (row >= 0 && row < ROWS && col >= 0 && col < COLS) {
        Passenger *p = *(seats + row) + col;
        if (!p->isBooked) {
            printf("Enter passenger name: ");
            fgets(p->name, sizeof(p->name), stdin);
            p->name[strcspn(p->name, "\n")] = '\0';
            printf("Enter age: ");
            scanf("%d", &p->age);
            getchar();
            p->isBooked = 1;
            printf("Seat booked successfully!\n");
        } else {
            printf("Seat already booked.\n");
        }
    } else {
        printf("Invalid seat number.\n");
    }
}
void cancelSeat(Passenger (*seats)[COLS]) {
    int row, col;
    printf("Enter seat to cancel (row[0-%d] and col[0-%d]): ", ROWS-1, COLS-1);
    scanf("%d %d", &row, &col);
    if (row >= 0 && row < ROWS && col >= 0 && col < COLS) {
        Passenger *p = *(seats + row) + col;
        if (p->isBooked) {
            p->isBooked = 0;
            strcpy(p->name, "");
            p->age = 0;
            printf("Booking cancelled.\n");
        } else {
            printf("Seat is not booked.\n");
        }
    } else {
        printf("Invalid seat number.\n");
    }
}
